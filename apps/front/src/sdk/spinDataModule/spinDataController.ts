/// Auto-generated file (nest-sdk-generator)
/// Please do not edit this file - re-generate the SDK using the generator instead.
/// Generated on: Wed, 23 Apr 2025 14:57:05 GMT
///
/// Parent module: spinDataModule
/// Controller: "spinDataController" registered as "spinData" (10 routes)

import { request } from "../central";
import type { CheckBalanceDto } from "../_types/src/modules/spinData/nolimit/dto/check-balance.dto";
import type { RTGSettingsRequestDto } from "../_types/src/modules/spinData/rtg/dto/rtg-settings-request.dto";
import type { RTGSpinRequestDto } from "../_types/src/modules/spinData/rtg/dto/rtg-spin-request.dto";

export default {
  // GET @ /spinData/top
  top(params: {} = {}, body: {} = {}, query: {} = {}): Promise<any[] | Error> {
    return request("GET", `/spinData/top`, body, query);
  },

  // GET @ /spinData/:id
  findOne(
    params: { id: string },
    body: {},
    query: { crudQuery: string }
  ): Promise<any> {
    return request("GET", `/spinData/${params.id}`, body, query);
  },

  // POST @ /spinData/remove-player
  playerTimedOut(params: {}, body: any, query: {} = {}): Promise<void> {
    return request("POST", `/spinData/remove-player`, body, query);
  },

  // POST @ /spinData/raw-data
  rawData(params: {}, body: any, query: {} = {}): Promise<void> {
    return request("POST", `/spinData/raw-data`, body, query);
  },

  // POST @ /spinData/checkbalance
  checkspin(
    params: {},
    body: CheckBalanceDto,
    query: {} = {}
  ): Promise<{ success: boolean; balance: number }> {
    return request("POST", `/spinData/checkbalance`, body, query);
  },

  // POST @ /spinData/nolimit/:gameName/handle-spin-result
  handleSpinResult(
    params: {},
    body: any,
    query: { crudQuery: string }
  ): Promise<any> {
    return request(
      "POST",
      `/spinData/nolimit/${params.gameName}/handle-spin-result`,
      body,
      query
    );
  },

  // POST @ /spinData/nolimit/:gameName/decrement
  decrementNoLimit(
    params: {},
    body: any,
    query: { crudQuery: string }
  ): Promise<any> {
    return request(
      "POST",
      `/spinData/nolimit/${params.gameName}/decrement`,
      body,
      query
    );
  },

  // POST @ /spinData/rtg/platform/:userId/:gameName/game/settings
  getSettings(
    params: {},
    body: RTGSettingsRequestDto,
    query: {} = {}
  ): Promise<{ error: boolean; status: number; message: string } | undefined> {
    return request(
      "POST",
      `/spinData/rtg/platform/${params.userId}/${params.gameName}/game/settings`,
      body,
      query
    );
  },

  // POST @ /spinData/rtg/platform/:userId/:gameName/game/spin
  doSpin(params: {}, body: RTGSpinRequestDto, query: {} = {}): Promise<void> {
    return request(
      "POST",
      `/spinData/rtg/platform/${params.userId}/${params.gameName}/game/spin`,
      body,
      query
    );
  },

  // POST @ /spinData/habanero
  habaneroInit(params: {} = {}, body: {} = {}, query: {} = {}): Promise<any> {
    return request("POST", `/spinData/habanero`, body, query);
  },
};
